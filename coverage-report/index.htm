<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>Summary - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />
<script type="text/javascript">
/* <![CDATA[ */
document.getElementsByClassName = function(cl) {
  var retnode = [];
  var myclass = new RegExp('\\b'+cl+'\\b');
  var elem = this.getElementsByTagName('*');
  for (var i = 0; i < elem.length; i++) {
    var classes = elem[i].className;
    if (myclass.test(classes)) {
      retnode.push(elem[i]);
    }
  }
  return retnode;
}; 

function getSiblingNode(element) {
    do {
        element = element.nextSibling;
    } while (element && element.nodeType != 1);
    return element;
}

function toggleAssemblyDetails() {
  var popup = getSiblingNode(this); 
  if (popup.style.display == 'block') { 
    popup.style.display = 'none'; 
  }
  else {
    var popups = document.getElementsByClassName('detailspopup');
    for (var i = 0, j = popups.length; i < j; i++) { 
      popups[i].style.display = 'none';
    }
    popup.style.display = 'block'; 
  }
  return false;
}

function collapseAllClasses() {
  var classRows = document.getElementsByClassName('classrow');
  for (var i = 0, j = classRows.length; i < j; i++) {
    classRows[i].style.display = 'none';
  }
  var expandedRows = document.getElementsByClassName('expanded');
  for (var i = 0, j = expandedRows.length; i < j; i++) {
    expandedRows[i].className = 'collapsed';
  }
  return false;
}

function expandAllClasses() {
  var classRows = document.getElementsByClassName('classrow');
  for (var i = 0, j = classRows.length; i < j; i++) {
    classRows[i].style.display = '';
  }
  var collapsedRows = document.getElementsByClassName('collapsed');
  for (var i = 0, j = collapsedRows.length; i < j; i++) {
    collapsedRows[i].className = 'expanded';
  }
  return false;
}

function toggleClassesInAssembly() {
  var assemblyRow = this.parentNode.parentNode;
  assemblyRow.className = assemblyRow.className == 'collapsed' ? 'expanded' : 'collapsed';
  var classRow = getSiblingNode(assemblyRow);
  while (classRow && classRow.className == 'classrow') {
    classRow.style.display = classRow.style.display == 'none' ? '' : 'none';
    classRow = getSiblingNode(classRow);
  }
  return false;
}

function init() {
  var toggleAssemblyDetailsLinks = document.getElementsByClassName('toggleAssemblyDetails');
  for (var i = 0, j = toggleAssemblyDetailsLinks.length; i < j; i++) {
    toggleAssemblyDetailsLinks[i].onclick = toggleAssemblyDetails;
  }

  document.getElementById('collapseAllClasses').onclick = collapseAllClasses;
  document.getElementById('expandAllClasses').onclick = expandAllClasses;

  var toggleClassesInAssemblyLinks = document.getElementsByClassName('toggleClassesInAssembly');
  for (var i = 0, j = toggleClassesInAssemblyLinks.length; i < j; i++) {
    toggleClassesInAssemblyLinks[i].onclick = toggleClassesInAssembly;
  }
}

window.onload = init;
/* ]]> */
</script>
</head><body><div class="container"><h1>Summary</h1><table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Generated on:</th><td>7/9/2012 - 9:53:37 PM</td></tr><tr><th>Parser:</th><td>MultiReportParser (2x OpenCoverParser)</td></tr><tr><th>Assemblies:</th><td>0</td></tr><tr><th>Files:</th><td>0</td></tr><tr><th>Coverage:</th><td>0%</td></tr><tr><th>Covered lines:</th><td>0</td></tr><tr><th>Coverable lines:</th><td>0</td></tr><tr><th>Total lines:</th><td>0</td></tr></table>
<h1>Assemblies</h1><p>No assemblies have been covered.</p><div class="footer">Generated by: ReportGenerator 1.4.1.0<br />7/9/2012 - 9:53:37 PM<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>